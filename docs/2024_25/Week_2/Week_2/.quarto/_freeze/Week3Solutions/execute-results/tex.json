{
  "hash": "ff47be094ce0f363bf3846eeae44f51c",
  "result": {
    "markdown": "---\ntitle: \"Week 2 Tasks Solutions\"\nformat: \n  html: default\n  pdf:  default\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(nycflights13)\nlibrary(readr)\nlibrary(knitr)\nlibrary(fivethirtyeight)\n```\n:::\n\n\n\n**Further Task 1**\n\nIn this task we will work with the dataset analysed and reported in the 2016 article from FiveThirtyEight.com entitled \"Some People Are Too Superstitious To Have A Baby On Friday The 13th\" [here](https://fivethirtyeight.com/features/some-people-are-too-superstitious-to-have-a-baby-on-friday-the-13th/).\n\nThe data set is called `US_births_2000_2014` and is in the `fivethirtyeight` package.\n\n1.  Create an object called `US_births_2013` which focuses only on data corresponding to 2013 births.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 1.1 Solution\nUS_births_2013 <- US_births_2000_2014 |> filter(year == 2013)\n```\n:::\n\n\n\n2.  By only choosing births data for the years 2010, 2011, 2012, and 2014 create a new dataframe called `US_births_small` and check that this resulting data frame has 1461 rows. Note that there are many different ways to do this, but try and come up with three different ways using:\n\n-   the \"or\" operator `|`\n-   the `%in%` operator\n-   the \"not\" operator `!` or combinations of them.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 1.2 Solution\nUS_births_small <- US_births_2000_2014 |> \n  filter(year %in% c(2010, 2011, 2012, 2014))\n\nUS_births_small <- US_births_2000_2014 |> \n  filter(!(year %in% c(2000:2009, 2013, 2015)))\n\nUS_births_small <- US_births_2000_2014 |> \n  filter(year == 2010 | year == 2011 | year == 2012 | year == 2014)\n```\n:::\n\n\n\n3.  Suppose we are interested in choosing rows for only weekdays (not Saturdays or Sundays) for `day_of_week` in year 2013. Write the code to do so and give the name `US_births_weekdays_2013` to the resulting data frame. (Note that you may want to run `US_births_2000_2014 |> distinct(day_of_week)` to identify the specific values of `day_of_week`.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 1.3 Solution\nUS_births_weekdays_2013 <- US_births_2000_2014 |> \n  filter(!(day_of_week %in% c('Sat','Sun')), year==2013)\n# You could also use & instead of the last comma, i.e. \nUS_births_weekdays_2013 <- US_births_2000_2014 |> \n  filter(!(day_of_week %in% c('Sat','Sun')) & year==2013)\n```\n:::\n\n```{=tex}\n\\newpage\n4\n```\n\n\n. Using what you covered in **Week 1: Visualization**, produce an appropriate plot looking at the pattern of births on all weekdays in 2013 coloured by the particular day of the week. (Remember to load the package `ggplot2`).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 1.4 Solution\nggplot(US_births_weekdays_2013, aes(x=date,y=births, color=day_of_week))+\n  geom_line()+ \n  labs(x='Date', y='Number of births', \n       title='Number US births on week days in 2013')\n```\n\n::: {.cell-output-display}\n![](Week3Solutions_files/figure-pdf/task1.4-solution-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n5.  The plot in the previous task has shown there are some outliers in the data for US births on weekdays in 2013. We can use the summarize function to get an idea for how these outliers may affect the shape of the births variable in `US_births_weekdays_2013`. Write some code to calculate the mean and median values for all weekday birth totals in 2013. Store this aggregated data in the data frame `birth_summ`. What do these values suggest about the effects of the outliers?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 1.5 Solution\nbirth_summ <- US_births_weekdays_2013 |> \n  summarize(mean_births =  mean(births),\n            median_births = median(births))\nbirth_summ\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 2\n  mean_births median_births\n        <dbl>         <int>\n1      12145.         12192\n```\n:::\n\n```{.r .cell-code}\n#Comparing the mean and the median values we see they are not very different, \n#showing that the potential outliers are not distorting the shape of \n```\n:::\n\n\n\n6.   Instead of looking at the overall mean and median across all of 2013 weekdays, calculate the mean and median for each of the five different weekdays throughout 2013. Using the same names for the columns as in the `birth_summ` data frame in the previous exercise, create a new data frame called `birth_day_summ`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 1.6 Solution\nbirth_day_summ <- US_births_weekdays_2013 |>\n  summarize( mean_births =  mean(births),\n             median_births = median(births),.by = c(day_of_week))\nbirth_day_summ\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 x 3\n  day_of_week mean_births median_births\n  <ord>             <dbl>         <dbl>\n1 Tues             12469.        12519 \n2 Wed              12190.        12194 \n3 Thurs            12194.        12270 \n4 Fri              12133.        12126.\n5 Mon              11732.        11838.\n```\n:::\n:::\n\n\n\n7.   Using the aggregated data in the `birth_day_summ data` frame, produce this barplot.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Week2FurtherTask1Barchart.png){width=1.89in}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 1.7 Solution\nggplot(birth_day_summ, aes(x=day_of_week,y=mean_births, fill=day_of_week))+ \n  geom_col(show.legend = FALSE)+ \n  labs(x='Day of Week', y='Average number of births', \n       title='Average US births by weekday, 2013')\n```\n\n::: {.cell-output-display}\n![](Week3Solutions_files/figure-pdf/task1.7-solution-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\\newpage\n\n**Further Task 2**\n\nIn this task we will work with the dataset analysed and reported in the 2014 article from FiveThirtyEight.com entitled \"41 Percent Of Fliers Think You're Rude If You Recline Your Seat\" [here](https://fivethirtyeight.com/features/airplane-etiquette-recline-seat/).\n\nThe data set is called `flying` and is in the `fivethirtyeight` package.\n\n1.  Write code to determine the proportion of respondents in the survey that responded with \"Very\" when asked if a passenger reclining their seat was rude. You should determine this proportion across the different levels of `age` and `gender` resulting in a data frame of size 8 x 3. Assign the name `prop_very` to this calculated proportion in this aggregated data frame.\n\n::: callout-tip\nWe can obtain proportions using the `mean()` function applied to logical values. For example suppose we want to count the proportion of \"heads\" in five tosses of a fair coin. If the results of the five tosses are stored in\n\n`tosses <- c(\"heads\", \"tails\", \"tails\", \"heads\", \"heads\")`\n\nthen we can use `mean(tosses == \"heads\")` to get the resulting answer of 0.6.\n:::\n\n::: callout-tip\n**I**ncluding the function `na.omit(TRUE)` in the 'pipe' (`|>`) removes all entries that are not complete whereas including the argument `na.rm=TRUE` in the `mean()` function removes just those entries where the relevant variable value is missing.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 2.1 Solution\ntwo_group_prop_1 <- flying |> \n  summarize(prop_very = mean(recline_rude=='Very', na.rm=TRUE),\n            .by=c(gender,age))\n#OR\ntwo_group_prop_2 <- flying |> \n  na.omit(TRUE) |> \n  summarize(prop_very = mean(recline_rude=='Very'),\n            .by = c(gender,age))\n```\n:::\n\n\n\n\\newpage\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Compare the two summaries...\ntwo_group_prop_1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 x 3\n  gender age   prop_very\n  <chr>  <ord>     <dbl>\n1 <NA>   <NA>     0.0909\n2 Male   30-44    0.0811\n3 Male   18-29    0.152 \n4 Male   45-60    0.0804\n5 Male   > 60     0.0606\n6 Female > 60     0.129 \n7 Female 30-44    0.0541\n8 Female 45-60    0.0410\n9 Female 18-29    0.0860\n```\n:::\n\n```{.r .cell-code}\ntwo_group_prop_2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 x 3\n  gender age   prop_very\n  <chr>  <ord>     <dbl>\n1 Male   30-44    0.075 \n2 Male   18-29    0.140 \n3 Male   45-60    0.0658\n4 Male   > 60     0.0455\n5 Female > 60     0.135 \n6 Female 30-44    0.0548\n7 Female 45-60    0.0353\n8 Female 18-29    0.113 \n```\n:::\n:::\n\n\n\n2.  Using the aggregated data you've created, produce two bar plots (one stacked, the other side-by-side) to show the differences between the sexes of the proportion of people who believe reclining your seat is 'very' rude, within each age group.\n\nWhat gender and age-range pairings have the highest and lowest proportions of thinking reclining airline seats are very rude in this survey?\n\nWhat stands out to you as you review these proportions?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Further Task 2.2 Solution\nggplot(two_group_prop_2, aes(x=age,y=prop_very,fill=gender))+geom_col()\n```\n\n::: {.cell-output-display}\n![](Week3Solutions_files/figure-pdf/task2.2-solution-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nggplot(two_group_prop_2, aes(x=age,y=prop_very,fill=gender))+geom_col(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](Week3Solutions_files/figure-pdf/task2.2-solution-2.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "Week3Solutions_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}